<html>
<body>
<script src="https://accounts.google.com/gsi/client" async defer></script>
<script>
    const apiUrl = 'http://localhost:8080/login'; // Replace with the API endpoint URL
    const registerUrl = 'http://localhost:8080/register'; // Replace with the register page URL
    const homeUrl = 'http://localhost:8080/home';

    function handleCredentialResponse(response) {
        console.log("Encoded JWT ID token: " + response.credential);
        const jwtToken = response.credential; // Replace with the actual JWT token you received

        // Decode the JWT token
        const base64Url = jwtToken.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const decodedPayload = JSON.parse(atob(base64));

        // Extract user data
        const userId = decodedPayload.sub;
        const userEmail = decodedPayload.email;
        const userName = decodedPayload.name;

        // Use the extracted data as needed
        console.log('User ID:', userId);
        console.log('User Email:', userEmail);
        console.log('User Name:', userName);

        // Fetch to API
        fetch(apiUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ idToken: jwtToken, email: userEmail, userid: userId, name: userName }),
        })
        .then(response => response.json())
        .then(data => {
            // Handle the API response
            console.log('API Response:', data);

            // Check if the response indicates successful registration
            if (data.message === 'User data added successfully') {
                // Redirect to the register page
                window.location.href = registerUrl;
            }
            if (data.message === 'User already exist') {
                // Redirect to the register page
                window.location.href = homeUrl;
            }
        })
        .catch(error => {
            // Handle any errors during the request or response handling
            console.error('Error:', error);
        });
    }

    window.onload = function () {
        google.accounts.id.initialize({
            client_id: "573309958754-prkpslkji9sbhennbuoe7tq85tnvvjbp.apps.googleusercontent.com",
            callback: handleCredentialResponse
        });

        google.accounts.id.renderButton(
            document.getElementById("buttonDiv"),
            { theme: "outline", size: "large" }  // customization attributes
        );

        google.accounts.id.prompt(); // also display the One Tap dialog
    }
</script>
<div id="buttonDiv"></div>
</body>
</html>
